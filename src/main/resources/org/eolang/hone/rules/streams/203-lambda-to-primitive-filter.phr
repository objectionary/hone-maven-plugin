# SPDX-FileCopyrightText: Copyright (c) 2024-2025 Objectionary.com
# SPDX-License-Identifier: MIT
---
# yamllint disable rule:line-length
name: lambda-to-primitive-filter
pattern: |
  ⟦
    φ ↦ Φ.hone.lambda,
    class ↦ 𝑒-class,
    method ↦ "test",
    interface ↦ 𝑒-interface,
    lambda-signature ↦ 𝑒-lambda-signature,
    bridge-signature ↦ 𝑒-bridge-signature,
    static ↦ 𝑒-static,
    opcode ↦ 𝑒-opcode,
    target ↦ 𝑒-target,
    stream ↦ ⟦
      class ↦ 𝑒-stream-class,
      method ↦ "filter",
      signature ↦ 𝑒-stream-signature
    ⟧
  ⟧
result: |
  ⟦
    φ ↦ Φ.hone.primitive-filter,
    opcode ↦ 𝑒-opcode,
    class ↦ 𝑒-class,
    stream-class ↦ 𝑒-stream-class,
    bridge-signature ↦ 𝑒-bridge-signature,
    static ↦ 𝑒-static,
    target ↦ 𝑒-target
  ⟧
when:
  or:
    - and:
        - matches: ['\(.*\)Ljava/util/function/IntPredicate;', 𝑒-interface]
        - eq: [𝑒-lambda-signature, '"(I)Z"']
        - eq: [𝑒-bridge-signature, '"(I)Z"']
        - eq: [𝑒-stream-class, '"java/util/stream/IntStream"']
        - eq: [𝑒-stream-signature, '"(Ljava/util/function/IntPredicate;)Ljava/util/stream/IntStream;"']
    - and:
        - matches: ['\(.*\)Ljava/util/function/LongPredicate;', 𝑒-interface]
        - eq: [𝑒-lambda-signature, '"(J)Z"']
        - eq: [𝑒-bridge-signature, '"(J)Z"']
        - eq: [𝑒-stream-class, '"java/util/stream/LongStream"']
        - eq: [𝑒-stream-signature, '"(Ljava/util/function/LongPredicate;)Ljava/util/stream/LongStream;"']
    - and:
        - matches: ['\(.*\)Ljava/util/function/DoublePredicate;', 𝑒-interface]
        - eq: [𝑒-lambda-signature, '"(D)Z"']
        - eq: [𝑒-bridge-signature, '"(D)Z"']
        - eq: [𝑒-stream-class, '"java/util/stream/DoubleStream"']
        - eq: [𝑒-stream-signature, '"(Ljava/util/function/DoublePredicate;)Ljava/util/stream/DoubleStream;"']
