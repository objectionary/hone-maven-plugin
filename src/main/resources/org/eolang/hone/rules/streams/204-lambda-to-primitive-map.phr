# SPDX-FileCopyrightText: Copyright (c) 2024-2025 Objectionary.com
# SPDX-License-Identifier: MIT
---
# yamllint disable rule:line-length
name: lambda-to-primitive-map
pattern: |
  ⟦
    φ ↦ Φ.hone.lambda,
    class ↦ 𝑒-class,
    method ↦ 𝑒-method,
    interface ↦ 𝑒-interface,
    lambda-signature ↦ 𝑒-lambda-signature,
    bridge-signature ↦ 𝑒-bridge-signature,
    target ↦ 𝑒-target,
    stream ↦ ⟦
      class ↦ 𝑒-stream-class,
      method ↦ "map",
      signature ↦ 𝑒-stream-signature
    ⟧
  ⟧
result: |
  ⟦
    φ ↦ Φ.hone.primitive-map,
    class ↦ 𝑒-class,
    stream-class ↦ 𝑒-stream-class,
    bridge-signature ↦ 𝑒-bridge-signature,
    target ↦ 𝑒-target
  ⟧
when:
  or:
    - and:
        - eq: [𝑒-method, '"applyAsInt"']
        - eq: [𝑒-interface, '"()Ljava/util/function/IntUnaryOperator;"']
        - eq: [𝑒-lambda-signature, '"(I)I"']
        - eq: [𝑒-bridge-signature, '"(I)I"']
        - eq: [𝑒-stream-class, '"java/util/stream/IntStream"']
        - eq: [𝑒-stream-signature, '"(Ljava/util/function/IntUnaryOperator;)Ljava/util/stream/IntStream;"']
    - and:
        - eq: [𝑒-method, '"applyAsLong"']
        - eq: [𝑒-interface, '"()Ljava/util/function/LongUnaryOperator;"']
        - eq: [𝑒-lambda-signature, '"(J)J"']
        - eq: [𝑒-bridge-signature, '"(J)J"']
        - eq: [𝑒-stream-class, '"java/util/stream/LongStream"']
        - eq: [𝑒-stream-signature, '"(Ljava/util/function/LongUnaryOperator;)Ljava/util/stream/LongStream;"']
    - and:
        - eq: [𝑒-method, '"applyAsDouble"']
        - eq: [𝑒-interface, '"()Ljava/util/function/DoubleUnaryOperator;"']
        - eq: [𝑒-lambda-signature, '"(D)D"']
        - eq: [𝑒-bridge-signature, '"(D)D"']
        - eq: [𝑒-stream-class, '"java/util/stream/DoubleStream"']
        - eq: [𝑒-stream-signature, '"(Ljava/util/function/DoubleUnaryOperator;)Ljava/util/stream/DoubleStream;"']
