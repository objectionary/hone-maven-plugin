# SPDX-FileCopyrightText: Copyright (c) 2024-2025 Objectionary.com
# SPDX-License-Identifier: MIT
---
# yamllint disable rule:line-length
name: lambda-to-unbox
pattern: |
  ⟦
    φ ↦ Φ.hone.lambda,
    class ↦ 𝑒-class,
    method ↦ 𝑒-method,
    interface ↦ 𝑒-interface,
    lambda-signature ↦ 𝑒-lambda-signature,
    bridge-signature ↦ 𝑒-bridge-signature,
    static ↦ 𝑒-static,
    opcode ↦ 𝑒-opcode,
    target ↦ ⟦
      𝐵-target-before,
      signature ↦ 𝑒-target-signature,
      𝐵-target-after
    ⟧,
    stream ↦ ⟦
      class ↦ "java/util/stream/Stream",
      method ↦ 𝑒-stream-method,
      signature ↦ 𝑒-stream-signature
    ⟧
  ⟧
result: |
  ⟦
    φ ↦ Φ.hone.unbox,
    opcode ↦ 𝑒-opcode,
    class ↦ 𝑒-class,
    bridge-signature ↦ 𝑒-bridge-signature,
    static ↦ 𝑒-static,
    target ↦ ⟦
      𝐵-target-before,
      signature ↦ 𝑒-target-signature,
      𝐵-target-after
    ⟧
  ⟧
when:
  or:
    - and:
        - eq: [𝑒-method, '"applyAsInt"']
        - matches: ['\(\)Ljava/util/function/ToIntFunction;', 𝑒-interface]
        - eq: [𝑒-lambda-signature, '"(Ljava/lang/Object;)I"']
        - eq: [𝑒-stream-method, '"mapToInt"']
        - eq: [𝑒-stream-signature, '"(Ljava/util/function/ToIntFunction;)Ljava/util/stream/IntStream;"']
        - matches: ['\(L.+;\)I', 𝑒-bridge-signature]
    - and:
        - eq: [𝑒-method, '"applyAsLong"']
        - matches: ['\(\)Ljava/util/function/ToLongFunction;', 𝑒-interface]
        - eq: [𝑒-lambda-signature, '"(Ljava/lang/Object;)J"']
        - eq: [𝑒-stream-method, '"mapToLong"']
        - eq: [𝑒-stream-signature, '"(Ljava/util/function/ToLongFunction;)Ljava/util/stream/LongStream;"']
        - matches: ['\(L.+;\)J', 𝑒-bridge-signature]
    - and:
        - eq: [𝑒-method, '"applyAsDouble"']
        - matches: ['\(\)Ljava/util/function/ToDoubleFunction;', 𝑒-interface]
        - eq: [𝑒-lambda-signature, '"(Ljava/lang/Object;)D"']
        - eq: [𝑒-stream-method, '"mapToDouble"']
        - eq: [𝑒-stream-signature, '"(Ljava/util/function/ToDoubleFunction;)Ljava/util/stream/DoubleStream;"']
        - matches: ['\(L.+;\)D', 𝑒-bridge-signature]
