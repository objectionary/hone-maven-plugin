{⟦
  j$Foo ↦ ⟦
    φ ↦ Φ.jeo.class,
    version ↦ 65,
    access ↦ 33,
    supername ↦ "java/lang/Object",
    interfaces ↦ ⟦
      φ ↦ Φ.jeo.seq.of0
    ⟧,
    name ↦ "Foo",
    j$main ↦ ⟦
      φ ↦ Φ.jeo.method,
      access ↦ 9,
      descriptor ↦ "([Ljava/lang/String;)V",
      signature ↦ "",
      maxs ↦ ⟦
        φ ↦ Φ.jeo.maxs,
        val26 ↦ 7,
        val27 ↦ 4
      ⟧,
      params ↦ ⟦
        φ ↦ Φ.jeo.params,
        arg0 ↦ ⟦
          φ ↦ Φ.jeo.param,
          index ↦ 0,
          access ↦ 0,
          type ↦ "[Ljava/lang/String;"
        ⟧
      ⟧,
      body ↦ ⟦
        φ ↦ Φ.jeo.seq.of50,
        instruction30 ↦ ⟦
          φ ↦ Φ.jeo.opcode.iconst_5,
          val31 ↦ 8
        ⟧,
        instruction178 ↦ ⟦
          φ ↦ Φ.hone.map,
          opcode ↦ "invokestatic",
          class ↦ "Foo",
          bridge-input ↦ "Ljava/lang/Integer;",
          bridge-output ↦ "Ljava/lang/Long;",
          accepted ↦ "Ljava/lang/Integer;",
          returned ↦ "Ljava/lang/Long;",
          target ↦ ⟦
            handle ↦ 6,
            class ↦ "Foo",
            method ↦ "lambda$main$0",
            signature ↦ "(Ljava/lang/Object;)Ljava/lang/Long;",
            is-interface ↦ Φ̇.false
          ⟧
        ⟧,
        instruction178 ↦ ⟦
          φ ↦ Φ.hone.transform,
          opcode ↦ "invokevirtual",
          class ↦ "Foo",
          bridge-input ↦ "Ljava/lang/Long;",
          bridge-output ↦ "Ljava/lang/Double;",
          target ↦ ⟦
            class ↦ "java/lang/Long",
            method ↦ "doubleValue",
            signature ↦ "()D"
          ⟧
        ⟧,
        instruction179 ↦ ⟦
          φ ↦ Φ.hone.o-filter,
          opcode ↦ "invokestatic",
          class ↦ "Foo",
          bridge-input ↦ "Ljava/lang/Double;",
          bridge-output ↦ "Ljava/lang/Double;",
          accepted ↦ "D",
          returned ↦ "Ljava/lang/Long;",
          target ↦ ⟦
            handle ↦ 6,
            class ↦ "Foo",
            method ↦ "lambda$main$1",
            signature ↦ "(D)Z",
            is-interface ↦ Φ̇.false
          ⟧
        ⟧
      ⟧
    ⟧
  ⟧
⟧}
